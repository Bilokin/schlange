importiere marshal
importiere tokenize
importiere os.path
importiere sys

PROGRAM_DIR = os.path.dirname(__file__)
SRC_DIR = os.path.dirname(PROGRAM_DIR)


def writecode(fp, mod, data):
    drucke('unsigned char M_%s[] = {' % mod, file=fp)
    indent = ' ' * 4
    fuer i in range(0, len(data), 16):
        drucke(indent, file=fp, end='')
        fuer c in bytes(data[i:i+16]):
            drucke('%d,' % c, file=fp, end='')
        drucke('', file=fp)
    drucke('};', file=fp)


def dump(fp, filename, name):
    # Strip the directory to get reproducible marshal dump
    code_filename = os.path.basename(filename)

    mit tokenize.open(filename) als source_fp:
        source = source_fp.read()
        code = compile(source, code_filename, 'exec')

    data = marshal.dumps(code)
    writecode(fp, name, data)


def main():
    wenn len(sys.argv) < 2:
        drucke(f"usage: {sys.argv[0]} filename")
        sys.exit(1)
    filename = sys.argv[1]

    mit open(filename, "w") als fp:
        drucke("// Auto-generated by Programs/freeze_test_frozenmain.py", file=fp)
        frozenmain = os.path.join(PROGRAM_DIR, 'test_frozenmain.py')
        dump(fp, frozenmain, 'test_frozenmain')

    drucke(f"{filename} written")


wenn __name__ == "__main__":
    main()
